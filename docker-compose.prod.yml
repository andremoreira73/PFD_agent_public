services:
  db:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=pfd_agent_prod
      - POSTGRES_USER=pfduser
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    # Remove ports in production - no external access needed
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pfduser -d pfd_agent_prod"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: uvicorn PFD_agent.asgi:application --host 0.0.0.0 --port 8000 --workers 2
    volumes:
      - media_volume:/app/media # Same volumes
      - logs_volume:/app/logs
      - static_volume:/app/staticfiles
    ports:
      - "127.0.0.1:8002:8000" # Only accessible from localhost
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=PFD_agent.settings.prod
      - DATABASE_URL=postgresql://pfduser:${DB_PASSWORD}@db:5432/pfd_agent_prod
      - PYTHONUNBUFFERED=1
      # Pass through API keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery:
    build: .
    command: celery -A PFD_agent worker -l info
    volumes:
      - media_volume:/app/media # Docker volume
      - logs_volume:/app/logs # Docker volume
      - static_volume:/app/staticfiles
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=PFD_agent.settings.prod
      - DATABASE_URL=postgresql://pfduser:${DB_PASSWORD}@db:5432/pfd_agent_prod
      - PYTHONUNBUFFERED=1
      # Pass through API keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGSMITH_ENDPOINT=${LANGSMITH_ENDPOINT}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    restart: unless-stopped

  # One-time container to collect static files
  collectstatic:
    build: .
    command: python manage.py collectstatic --noinput
    volumes:
      - static_volume:/app/staticfiles
    environment:
      - DJANGO_SETTINGS_MODULE=PFD_agent.settings.prod
      - DATABASE_URL=postgresql://pfduser:${DB_PASSWORD}@db:5432/pfd_agent_prod
    profiles:
      - setup

volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
  logs_volume:
